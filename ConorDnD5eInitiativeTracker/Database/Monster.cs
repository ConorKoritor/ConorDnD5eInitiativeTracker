//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConorDnD5eInitiativeTracker.Database
{
    using System;
    using System.Collections.Generic;
    
    public partial class Monster
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Monster()
        {
            this.ArmorClasses = new HashSet<ArmorClass>();
            this.ConditionImmunities = new HashSet<ConditionImmunity>();
            this.Proficiencies = new HashSet<Proficiency>();
            this.Speeds = new HashSet<Speed>();
            this.Actions = new HashSet<Action>();
            this.SpecialAbilities = new HashSet<SpecialAbility>();
            this.LegendaryActions = new HashSet<LegendaryAction>();
            this.SpellMonsterTables = new HashSet<SpellMonsterTable>();
            this.MonsterScenarioTables = new HashSet<MonsterScenarioTable>();
        }
    
        public int Id { get; set; }
        public string Name { get; set; }
        public int HP { get; set; }
        public short Initiative_Modifier { get; set; }
        public string Desc { get; set; }
        public string Size { get; set; }
        public string Type { get; set; }
        public string Hit_Dice { get; set; }
        public string Hit_Points_Roll { get; set; }
        public string Alignment { get; set; }
        public string Languages { get; set; }
        public short Challenge_Rating { get; set; }
        public int XP { get; set; }
        public string Damage_Vulnerabilities { get; set; }
        public string Damage_Resistances { get; set; }
        public string Damage_Immunities { get; set; }
        public bool IsSpellcaster { get; set; }
    
        public virtual Abilities Ability { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ArmorClass> ArmorClasses { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ConditionImmunity> ConditionImmunities { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Proficiency> Proficiencies { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Speed> Speeds { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Action> Actions { get; set; }
        public virtual SpellCastingStats SpellCastingStat { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SpecialAbility> SpecialAbilities { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<LegendaryAction> LegendaryActions { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SpellMonsterTable> SpellMonsterTables { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<MonsterScenarioTable> MonsterScenarioTables { get; set; }
    }
}
